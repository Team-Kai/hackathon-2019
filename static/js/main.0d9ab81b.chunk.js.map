{"version":3,"sources":["components/Home.jsx","components/SearchResults.jsx","components/Listing.jsx","components/Navigation.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","document","title","Component","SearchResults","Listing","Navigation","Fragment","className","to","viewBox","role","aria-hidden","focusable","style","d","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+QAEqBA,G,kMAIbC,SAASC,MAAQ,gC,+BAIjB,OACI,+D,GATsBC,cCAbC,E,4LAGbH,SAASC,MAAQ,+B,+BAIjB,OACI,yE,GAR+BC,aCAtBE,E,4LAIbJ,SAASC,MAAQ,+E,+BAIjB,OACI,6E,GATyBC,a,OCChBG,E,iLAEb,OACI,kBAAC,IAAMC,SAAP,KACI,yBAAKC,UAAU,iDACX,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,KAClC,yBAAKC,QAAQ,gBAAgBC,KAAK,eAAeC,cAAY,OAAOC,UAAU,QAAQC,MAAO,CAAC,OAAU,MAAU,MAAS,MAAU,QAAW,QAAS,KAAQ,iBAAiB,0BAAMC,EAAE,i5BAG1L,4BAAQP,UAAU,iBAAiBQ,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAClL,0BAAMb,UAAU,yBAGpB,yBAAKA,UAAU,2BAA2Bc,GAAG,0BAE7C,2BAAOd,UAAU,uBAAuBQ,KAAK,SAASO,YAAY,SAASF,aAAW,WACtF,4BAAQb,UAAU,uCAAuCQ,KAAK,UAA9D,UAEI,0BAAMR,UAAU,4BACZ,wBAAIA,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,KAA9B,gBAEJ,wBAAID,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,KAA9B,uBAEJ,wBAAID,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,KAA9B,SAEJ,wBAAID,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,KAA9B,YAEJ,wBAAID,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,KAA9B,oB,GAjCIN,aCMnBqB,E,iLAEjB,OACE,yBAAKhB,UAAU,OACX,kBAAC,EAAD,MACF,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,IAAIC,UAAW3B,IACjC,kBAAC,IAAD,CAAO0B,KAAK,eAAeC,UAAWtB,IACtC,kBAAC,IAAD,CAAOqB,KAAK,UAAUC,UAAWvB,W,GATZD,aCGbyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEJjC,SAASkC,eAAe,SDsHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0d9ab81b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Home extends Component {\r\n\r\n    componentDidMount() {\r\n        // Default Home page title is \"Vacation Rentals, Homes, Experiences & Places - Airbnb\"\r\n        document.title = \"New Mexico, Mexico - Airbnb\";\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                This is the Home Component\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SearchResults extends Component {\r\n\r\n    componentDidMount() {\r\n        document.title = \"Mexico City Stays - Airbnb\";\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                This is the Search Results Component\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Listing extends Component {\r\n\r\n    componentDidMount() {\r\n        // Doesn't end with -Airbnb for listing pages\r\n        document.title = \"Sweet Little Room near St Martin Canal - Boutique hotels for Rent in Paris\"; \r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                This is the Individual Listing Component\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                    <svg viewBox=\"0 0 1000 1000\" role=\"presentation\" aria-hidden=\"true\" focusable=\"false\" style={{\"height\": 1 + 'em', \"width\": 1 + 'em', \"display\": \"block\", \"fill\": \"currentcolor\"}}><path d=\"m499.3 736.7c-51-64-81-120.1-91-168.1-10-39-6-70 11-93 18-27 45-40 80-40s62 13 80 40c17 23 21 54 11 93-11 49-41 105-91 168.1zm362.2 43c-7 47-39 86-83 105-85 37-169.1-22-241.1-102 119.1-149.1 141.1-265.1 90-340.2-30-43-73-64-128.1-64-111 0-172.1 94-148.1 203.1 14 59 51 126.1 110 201.1-37 41-72 70-103 88-24 13-47 21-69 23-101 15-180.1-83-144.1-184.1 5-13 15-37 32-74l1-2c55-120.1 122.1-256.1 199.1-407.2l2-5 22-42c17-31 24-45 51-62 13-8 29-12 47-12 36 0 64 21 76 38 6 9 13 21 22 36l21 41 3 6c77 151.1 144.1 287.1 199.1 407.2l1 1 20 46 12 29c9.2 23.1 11.2 46.1 8.2 70.1zm46-90.1c-7-22-19-48-34-79v-1c-71-151.1-137.1-287.1-200.1-409.2l-4-6c-45-92-77-147.1-170.1-147.1-92 0-131.1 64-171.1 147.1l-3 6c-63 122.1-129.1 258.1-200.1 409.2v2l-21 46c-8 19-12 29-13 32-51 140.1 54 263.1 181.1 263.1 1 0 5 0 10-1h14c66-8 134.1-50 203.1-125.1 69 75 137.1 117.1 203.1 125.1h14c5 1 9 1 10 1 127.1.1 232.1-123 181.1-263.1z\"></path></svg>\r\n                    </Link>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\r\n                    <input className=\"form-control my-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n\r\n                        <form className=\"form-inline my-2 my-lg-0\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/\">Host a home</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/\">Host an experience</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/\">Help</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/\">Sign up</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/\">Log in</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </form>\r\n                    </div>\r\n                </nav>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport { Route, Switch} from \"react-router-dom\";\n\nimport './App.scss';\nimport Home from './components/Home';\nimport SearchResults from './components/SearchResults';\nimport Listing from './components/Listing';\nimport Navigation from './components/Navigation';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <Navigation />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/listing/:id' component={Listing} />\n            <Route path='/search' component={SearchResults} />\n          </Switch>\n        </div>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}